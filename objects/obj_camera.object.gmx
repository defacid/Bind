<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == rm_test) {
    for (i=0; i&lt;48; i++) {
        var xx = random(room_width), yy = random(room_height);
        repeat(32 + irandom(16)) {
            var xoff = 128 - random(256), yoff = 128 - random(256);
            tile_add(bkg_grass, 0, 0, 64, 64, xx + xoff, yy + yoff, 100001);
            
            var rand;
            rand = random(1);
            if (rand &gt; .9) {
                repeat(irandom(6)) tile_add(bkg_flora, 16*irandom(3), 0, 16, 16, xx + xoff + random(64), yy + yoff + random(64), 100000);
            }
        }
    }
}

canSpawn = 0;
alarm[0] = room_speed * 15;

splashAlpha = 1;
splashDone = 0;
alarm[1] = room_speed * 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>splashDone = 1;
obj_player.canMove = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canSpawn = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir, dis;
dir = point_direction(x, y, obj_player.x, obj_player.y);
dis = point_distance(x, y, obj_player.x, obj_player.y);

direction = dir;
speed = dis/16;

if (canSpawn) {
    canSpawn = 0;
    
    var rand = random(1), spawnRate = 0;
    if (obj_player.hasHelm) spawnRate += 1;
    if (obj_player.hasShield) spawnRate += 1;
    if (obj_player.hasCuirass) spawnRate += 1;
    if (obj_player.hasGauntlets) spawnRate += 1;
    if (obj_player.hasGreaves) spawnRate += 1;
    
    if (rand &gt; .9 - .05*spawnRate) {
        var _dir, _dis;
        _dir = random(360);
        _dis = 42 + random(128);
        instance_create(obj_player.x + lengthdir_x(_dis, _dir), obj_player.y + lengthdir_y(_dis, _dir), obj_penumbra);
    }
    
    alarm[0] = room_speed*2/spawnRate + room_speed*(5-spawnRate) + random(room_speed*2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (splashDone &amp;&amp; splashAlpha &gt; 0) {
    splashAlpha -= 0.025;
}
    
draw_set_alpha(splashAlpha);
draw_sprite(spr_splash, 0, view_xview, view_yview);

if (obj_player.showDebug) {

    draw_set_blend_mode(bm_subtract);
    draw_primitive_begin(pr_trianglefan);
        draw_vertex_color(view_xview + view_wview/2, view_yview + view_hview/2, c_black, 1);
        draw_vertex_color(view_xview, view_yview, c_dkgray, 0.5);
        draw_vertex_color(view_xview + view_wview, view_yview, c_dkgray, 0.5);
        draw_vertex_color(view_xview + view_wview, view_yview + view_hview, c_dkgray, 0.5);
        draw_vertex_color(view_xview, view_yview + view_hview, c_dkgray, 0.5);
        draw_vertex_color(view_xview, view_yview, c_dkgray, 0.5);
        //draw_vertex_color(view_xview + view_wview/2, view_yview + view_wview/2, c_black, 1);
    draw_primitive_end();
    draw_set_blend_mode(bm_normal);

    draw_set_color(c_white);
    draw_set_font(fnt_debug);
    draw_set_alpha(1);
    
    var armorOff = 48;
    
    draw_set_alpha(0.5+0.5*obj_player.hasHelm);
    draw_text(view_xview + 4, view_yview + armorOff + 4, "Helm");
    draw_set_alpha(0.5+0.5*obj_player.hasCuirass);
    draw_text(view_xview + 4, view_yview + armorOff + 14, "Cuirass");
    draw_set_alpha(0.5+0.5*obj_player.hasGauntlets);
    draw_text(view_xview + 4, view_yview + armorOff + 24, "Gauntlets");
    draw_set_alpha(0.5+0.5*obj_player.hasGreaves);
    draw_text(view_xview + 4, view_yview + armorOff + 34, "Greaves");
    draw_set_alpha(0.5+0.5*obj_player.hasShield);
    draw_text(view_xview + 4, view_yview + armorOff + 44, "Shield");
    
    draw_set_alpha(1);
    draw_text(view_xview + view_wview - string_width("FPS: " + string(fps)) - 4, view_yview + 4, "FPS: " + string(fps) + "#X: " + string(obj_player.x) + "#Y: " + string(obj_player.y));
    draw_text(view_xview + 4, view_yview + view_hview - 24, "COMBO " + string(obj_player.combo));
    draw_text(view_xview + 4, view_yview + view_hview - 14, "Direction: " + string(round(obj_player.direction)) + "   Can Move: " + string(obj_player.canMove) + "   Rolling: " + string(obj_player.roll) + "   Strafing: " + string(obj_player.strafe));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
